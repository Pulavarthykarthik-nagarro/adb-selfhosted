trigger:
  branches:
    include:
    - develop
 

  paths:
    # include:
    # - notebooks
    exclude:
    - adb-azure-pipelines.yml

variables:
- group: adb-selfhosted
- group: test-key-vault


pool:
  vmImage: 'windows-latest'

#########################
#BUILD STAGE FOR ADB
#########################

stages:
  - stage: Build_ADB
    #condition: eq(variables.isDev, true)
    displayName: Building databricks notebook Artifact in Dev 
    jobs:
      
      - job: Creating
        displayName: "Creating Artifact in Dev"
        
        steps:
          - powershell: |
              tree "$(System.DefaultWorkingDirectory)" /F
            displayName: 'Treeview of System.DefaultWorkingDirectory'

          - task: CopyFiles@2
            displayName: Copying files to Staging Directory
            inputs:
              SourceFolder: '$(system.defaultworkingdirectory)/notebooks'
              Contents: '**'
              TargetFolder: '$(build.artifactstagingdirectory)'


          - task: PublishBuildArtifacts@1
            displayName: Publish Build Artifact in Dev
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

          - powershell: |
              tree "$(build.artifactstagingdirectory)" /F
            displayName: 'Treeview of build.artifactstagingdirectory'


###################
#RELEASE STAGE in QA Env
###################  

  - stage: ADB_DEV_Release
    displayName: Deploying databricks notebook in QA
    dependsOn: Build_ADB
    #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    condition: succeeded('Build_ADB')
    jobs:
      - job:
        displayName: "Deploying to QA"
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Download Build Artifactory
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'


          - powershell: |
              tree "$(System.ArtifactsDirectory)" /F
            displayName: 'Treeview of System.ArtifactsDirectory'
          

                