trigger:
  branches:
    include:
    - develop
 

  paths:
    include:
    - DevOps/notebooks
    exclude:
    - adb-azure-pipelines.yml

variables:
- group: adb-selfhosted


pool:
  vmImage: 'windows-latest'

#########################
#BUILD STAGE FOR ADB
#########################

stages:
  - stage: Build_ADB
    #condition: eq(variables.isDev, true)
    displayName: Building databricks notebook Artifact in Dev 
    jobs:
      
      - job: Creating
        displayName: "Creating Artifact in Dev"
        
        pool:
          name: 'demopool'
          vmImage: 'demoagent'
        steps:
          - powershell: |
              tree "$(System.DefaultWorkingDirectory)" /F
            displayName: 'Treeview of System.DefaultWorkingDirectory'

          - task: CopyFiles@2
            displayName: Copying files to Staging Directory
            inputs:
              SourceFolder: '$(system.defaultworkingdirectory)/notebooks'
              Contents: '**'
              TargetFolder: '$(build.artifactstagingdirectory)'


          - task: PublishBuildArtifacts@1
            displayName: Publish Build Artifact in Dev
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

          - powershell: |
              tree "$(build.artifactstagingdirectory)" /F
            displayName: 'Treeview of build.artifactstagingdirectory'


###################
#RELEASE STAGE in QA Env
###################  

  # - stage: ADB_DEV_Release
  #   displayName: Deploying databricks notebook in QA
  #   dependsOn: Build_ADB
  #   #condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  #   condition: succeeded('Build_ADB')
  #   jobs:
  #     - job:
  #       displayName: "Deploying to QA"
  #       pool:
  #         vmImage: 'windows-latest'
  #       # environment: daa-dev
  #       # strategy:
  #       #   runOnce:
  #       #     deploy:
  #       steps:
  #         - task: DownloadBuildArtifacts@0
  #           displayName: Download Build Artifactory
  #           inputs:
  #             buildType: 'current'
  #             downloadType: 'single'
  #             artifactName: 'drop'
  #             downloadPath: '$(System.ArtifactsDirectory)'


  #         - powershell: |
  #             tree "$(System.ArtifactsDirectory)" /F
  #           displayName: 'Treeview of System.ArtifactsDirectory'
          
  #         # - task: AzureKeyVault@1
  #         #   inputs:
  #         #     ConnectedServiceName: '$(ConnectedServiceName)'
  #         #     #azureSubscription: 'Microsoft Azure Enterprise BigDataAI'
  #         #     KeyVaultName: '$(keyvaultname)'
  #         #     SecretsFilter: '*'
  #         #     runAsPreJob: false
  #         - task: databricksDeployScripts@0
  #           inputs:
  #             authMethod: 'bearer'
  #             bearerToken: 'dapif8d8e59b23663e07781a4e5153e3129b-3'
  #             region: '$(region)'
  #             localPath: '$(System.ArtifactsDirectory)/drop'
  #             #databricksPath: ''
  #             clean: true        


  


